const MORSE_TABLE = {
    '.-':     'a',
    '-...':   'b',
    '-.-.':   'c',
    '-..':    'd',
    '.':      'e',
    '..-.':   'f',
    '--.':    'g',
    '....':   'h',
    '..':     'i',
    '.---':   'j',
    '-.-':    'k',
    '.-..':   'l',
    '--':     'm',
    '-.':     'n',
    '---':    'o',
    '.--.':   'p',
    '--.-':   'q',
    '.-.':    'r',
    '...':    's',
    '-':      't',
    '..-':    'u',
    '...-':   'v',
    '.--':    'w',
    '-..-':   'x',
    '-.--':   'y',
    '--..':   'z',
    '.----':  '1',
    '..---':  '2',
    '...--':  '3',
    '....-':  '4',
    '.....':  '5',
    '-....':  '6',
    '--...':  '7',
    '---..':  '8',
    '----.':  '9',
    '-----':  '0',
};


function decode(expr) {

  let arr = expr.split(''),
      letter = [],
      result = [],
      code = 0;

 // console.log(arr);

  for (i in arr) {
    let charN = Object.values(MORSE_TABLE).indexOf(arr[i]);  // получаем номер(индекс) символа, под которым лежит 
                                                             // каждый символ expr в массиве значений MORSE_TABLE   

    code = Object.keys(MORSE_TABLE)[charN];                  // записываем код морзе для каждой буквы в переменную

    letter = [];                                             // обнуляем переменные с прошлого шага цикла
    
    for (char of code.split('')) {                           // цикл: каждому символу (тире/точка) присваиваем 11 или 10, пушим в массив
      if (char === '.') { letter.push('10')}
      if (char === '-') { letter.push('11')}
    }

    do {                                                     // по ТЗ длина кода каждой буквы должна быть 10 цифр. Проверяем длину      
      letter.unshift('0');                                   // так шо добавляем в массив нули,
    } while (letter.join('').length < 10);                   // пока его длина меньше 10
    
    
 //   console.log(letter);
    result.push(letter.join(''));         // пушим в итоговый массив, склеивая код каждого символа в один длинный код всей буквы
    
  }


  console.log(result.join(''))
  return 
}

decode('kot');


module.exports = {
     decode
}

